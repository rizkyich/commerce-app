import Head from 'next/head'
import { GetServerSidePropsContext } from 'next'
import { Inter } from 'next/font/google'

import Layout from '@/components/layout/Layout'
import CatalogSection from '@/components/CatalogSection'

import { getCategoryList } from '@/services/category'
import { CategoryType } from '@/types/categoryTypes'
import { getProductList } from '@/services/products'
import { ProductType } from '@/types/productTypes'

const inter = Inter({ subsets: ['latin'] })

type CatalogPageProps = {
  categories: CategoryType[],
  products: ProductType[]
}

export default function CatalogPage({
  categories,
  products
}: CatalogPageProps) {

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <CatalogSection
          categories={categories}
          products={products}
        />
      </Layout>
    </>
  )
}

export async function getServerSideProps(context: GetServerSidePropsContext) {
  try {
    const { params } = context

    const categories =  await getCategoryList();
    categories.sort((a, b) => b.name.length - a.name.length)

    let products: ProductType[];

    if (params?.categoryId !== "all") {
      const category = categories.find((category: CategoryType) => category.id === params?.categoryId);

      if (!category) {
        return {
          notFound: true
        }
      }
      products = await getProductList(category.id);
    } else {
      products = await getProductList();
    }

    return {
      props: {
        categories,
        products
      }, 
    }
  } catch (error) {
    console.error(error)
  } 
}

